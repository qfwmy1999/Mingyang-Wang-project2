{"ast":null,"code":"var _jsxFileName = \"/Users/wangmingyang/Desktop/CS 5610 Web Development/Mingyang_Wang_project2/src/components/Grid.js\",\n    _s = $RefreshSig$();\n\nimport { useWordle } from '../context/Wordle';\nimport { getStatusByPlace } from '../utils';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Grid = () => {\n  _s();\n\n  const {\n    solution,\n    guesses,\n    count,\n    length\n  } = useWordle();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: guesses.map((guess, i) => {\n      guess = guess.slice();\n      guess.push(...Array(length).fill(''));\n      guess = guess.slice(0, length);\n      const status = solution && count > i ? getStatusByPlace(guess.slice(), solution.split('')) : {};\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: guess.map((key, i) => /*#__PURE__*/_jsxDEV(Cell, {\n          value: key,\n          status: status[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Grid, \"hgHdnul7Z6HB/dfXiUEds5BYH8M=\", false, function () {\n  return [useWordle];\n});\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/wangmingyang/Desktop/CS 5610 Web Development/Mingyang_Wang_project2/src/components/Grid.js"],"names":["useWordle","getStatusByPlace","Cell","Grid","solution","guesses","count","length","map","guess","i","slice","push","Array","fill","status","split","key"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAAuCP,SAAS,EAAtD;AACA,sBACE;AAAA,cACGK,OAAO,CAACG,GAAR,CAAY,CAACC,KAAD,EAAQC,CAAR,KAAc;AACvBD,MAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,EAAR;AACAF,MAAAA,KAAK,CAACG,IAAN,CAAW,GAAGC,KAAK,CAACN,MAAD,CAAL,CAAcO,IAAd,CAAmB,EAAnB,CAAd;AACAL,MAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeJ,MAAf,CAAR;AACA,YAAMQ,MAAM,GAAGX,QAAQ,IAAIE,KAAK,GAAGI,CAApB,GAAwBT,gBAAgB,CAACQ,KAAK,CAACE,KAAN,EAAD,EAAgBP,QAAQ,CAACY,KAAT,CAAe,EAAf,CAAhB,CAAxC,GAA8E,EAA7F;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,kBACKP,KAAK,CAACD,GAAN,CAAU,CAACS,GAAD,EAAMP,CAAN,kBACP,QAAC,IAAD;AAAc,UAAA,KAAK,EAAEO,GAArB;AAA0B,UAAA,MAAM,EAAEF,MAAM,CAACL,CAAD;AAAxC,WAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,gBADH;AADL,SAAiDA,CAAjD;AAAA;AAAA;AAAA;AAAA,cADF;AAOH,KAZA;AADH,mBADF;AAiBD,CAnBD;;GAAMP,I;UACyCH,S;;;KADzCG,I;AAqBN,eAAeA,IAAf","sourcesContent":["import { useWordle } from '../context/Wordle'\r\nimport { getStatusByPlace } from '../utils'\r\nimport Cell from './Cell'\r\n\r\nconst Grid = () => {\r\n  const { solution, guesses, count, length } = useWordle()\r\n  return (\r\n    <>\r\n      {guesses.map((guess, i) => {\r\n          guess = guess.slice()\r\n          guess.push(...Array(length).fill(''))\r\n          guess = guess.slice(0, length)\r\n          const status = solution && count > i ? getStatusByPlace(guess.slice(), solution.split('')) : {}\r\n          return (\r\n            <div className=\"row justify-content-center\" key={i}>\r\n                {guess.map((key, i) => (\r\n                    <Cell key={i} value={key} status={status[i]} />\r\n                ))}\r\n            </div>\r\n          )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n"]},"metadata":{},"sourceType":"module"}